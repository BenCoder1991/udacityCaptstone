---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

# Reference: https://classroom.udacity.com/nanodegrees/nd9991/parts/12a332e4-2fa5-4233-80ca-b8a4f4791953/modules/4fee4e85-fc99-4307-9568-115fd713c77a/lessons/b7ab2a0f-4cdf-4d3b-bc2e-19e4c34cf2a8/concepts/27bf8125-7e05-4022-9d30-c2298304b0d9
  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"  
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

  roles:
    # Your code here